main {

  appName = "SuperSixJwt"
  appName = ${?APP_NAME}

  # use to override config array in Main.scala
  akkaSeed0 = "akka.tcp://SuperSixJwt@127.0.0.1:2551"
  akkaSeed0 = ${?AKKA_SEED0}

  akkaSeed1 = "akka.tcp://SuperSixJwt@127.0.0.1:2551"
  akkaSeed1 = ${?AKKA_SEED1}

  logLevel = "debug"
  logLevel = ${?LOG_LEVEL}

  path = jwt
  path = ${?URL_PATH}

  apiPort = 8080
  apiPort = ${?API_PORT}

  corsOrigin = [
    "https://MY_DOMAIN.com"
    "http://localhost:8080"
  ]

  keyServiceShards = 12

  keyPersistenceId = "keyPersistenceId"
  keyPersistenceId = ${?KEY_PERSISTENCE_ID}

}

akka {

  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  loglevel = ${?AKKA_LOG_LEVEL}
  loglevel = "INFO"

  actor {

    provider = cluster

    serializers {
      device = "onextent.supersix.jwt.models.functions.AvroSupport$DeviceSerializer"
      deviceRequest = "onextent.supersix.jwt.models.functions.AvroSupport$DeviceRequestSerializer"
    }
    serialization-bindings {
      "onextent.supersix.jwt.models.Device" = device
      "onextent.supersix.jwt.models.DeviceRequest" = deviceRequest
    }
  }
  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "127.0.0.1"
      hostname = ${?HOST_NAME}
      port = 2551
      port = ${?AKKA_PORT}
    }
  }

}

akka.persistence.journal.plugin = "cassandra-journal"

cassandra-journal {

  contact-points = [${?CASSANDRA_HOST}]

  port = 9042
  port = ${?CASSANDRA_PORT}

  keyspace = "supersix_jwt_jrnl"
  keyspace = ${?JRNL_KEYSPACE}

  authentication.username = "cassandra"
  authentication.username = ${?CASSANDRA_USERNAME}

  authentication.password = "cassandra"
  authentication.password = ${?CASSANDRA_PASSWORD}

  ssl {

  }

}

